

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Checkout</title>
  <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
  <link rel="stylesheet" href="/user_assets/css/main.css">
  <style>
    /* General page styles */
    body {
      background-color: #f8f9fa;
    }
    .container {
      margin-top: 30px;
    }
    .checkout-row {
      display: flex;
      justify-content: space-between;
      align-items: flex-start;
    }
    .content-section, .summary-section {
      background-color: white;
      padding: 20px;
      border-radius: 10px;
      box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    }
    .content-section {
      width: 60%;
    }
    .summary-section {
      width: 35%;
    }

    /* Address styles */
    .address-card {
      padding: 15px;
      margin-bottom: 15px;
      border: 2px solid #e9ecef;
      border-radius: 10px;
      background-color: #f1f1f1;
    }
    .form-check-label {
      font-weight: 600;
    }
    .address-actions a {
      font-size: 0.85rem;
      color: #007bff;
    }

    /* Payment method styles */
    .payment-method {
      margin-top: 30px;
    }
    .payment-method h3 {
      margin-bottom: 15px;
    }
    .payment-method label {
      display: block;
      padding: 10px 15px;
      margin-bottom: 10px;
      border: 1px solid #ced4da;
      border-radius: 50px;
      font-weight: 600;
      cursor: pointer;
      background-color: #f9f9f9;
      width: 300px;
    }
    .payment-method input[type="radio"] {
      margin-right: 10px;
    }

    /* Button styles */
    #razorpayButton,
    .btn-block {
      width: auto;
      padding: 10px 30px;
      border-radius: 50px;
      font-weight: 600;
      text-transform: uppercase;
    }
    #razorpayButton {
      background-color: #f37254;
      color: white;
      border: none;
    }
    #razorpayButton:hover {
      background-color: #e65c39;
    }
    #placeOrderForm button[type="submit"] {
      background-color: #007bff;
      color: white;
      border: none;
    }

    /* Coupon section */
    .coupon-container {
      margin-bottom: 20px;
      width: 400px;
      margin-left: 900px;
    }
    .coupon-item {
      display: flex;
      justify-content: space-between;
      align-items: center;
      padding: 10px 15px;
      border: 1px solid #ced4da;
      border-radius: 50px;
      margin-bottom: 10px;
    }
    .apply-coupon-button {
      border-radius: 50px;
      font-weight: 600;
    }

    /* Order summary styles */
    .order-summary {
      margin-top: 20px;
    }
    .order-summary li {
      padding: 15px;
    }
    .order-summary .list-group-item {
      border: none;
    }

    /* Responsive adjustments */
    @media (max-width: 768px) {
      .checkout-row {
        flex-direction: column;
      }
      .content-section,
      .summary-section {
        width: 100%;
        margin-bottom: 20px;
      }
    }
  </style>
</head>
<body>
  <div class="container">
    <h2 class="mb-4 text-center">Checkout</h2>

    <% if (message) { %>
    <div class="alert alert-<%= messageType %>"><%= message %></div>
    <% } %>

    <!-- Separate form for applying coupon -->
    <form id="applyCouponForm" method="POST" action="/apply-coupon">
      <div class="coupon-container">
        <h5>Apply Coupon</h5>
        <% if (coupons && coupons.length > 0) { %>
            <% coupons.forEach(coupon => { %>
                <div class="coupon-item">
                    <div class="coupon-info">
                        <div class="coupon-code">Code: <%= coupon.code %></div>
                        <div class="coupon-discount">Discount: ₹<%= coupon.discountValue %></div>
                        <div class="coupon-expiry">
                            Expiry: <%= new Date(coupon.expirationDate).toLocaleDateString() %>
                        </div>
                    </div>
                    <button type="button" class="btn btn-outline-primary apply-coupon-button" 
                    data-coupon-code="<%= coupon.code %>">Apply</button>
                </div>
            <% }) %>
        <% } else { %>
            <p>No coupons available.</p>
        <% } %>
      </div>
    </form>

    <!-- Form for placing the order -->
    <form id="placeOrderForm" action="/place-order" method="POST">
      <input type="hidden" name="discountAmount" id="discountAmount" value="<%= discountAmount %>">
      <input type="hidden" name="couponCode" id="couponCode" value="<%= appliedCouponCode || '' %>">
      <input type="hidden" name="finalAmount" id="finalAmount" value="<%= finalAmount %>">
      <!-- Razorpay payment method will be dynamically set below -->
    
      <div class="checkout-row">
        <div class="content-section">
          <h4>Shipping Address</h4>
          <% if (user && user.addresses && user.addresses.length > 0) { %>
            <% user.addresses.forEach((address, index) => { %>
              <div class="address-card <%= index === 0 ? 'active' : '' %>">
                <div class="form-check">
                  <input
                    class="form-check-input"
                    type="radio"
                    name="shippingAddressId"
                    id="address<%= index %>"
                    value="<%= address._id %>"
                    <%= index === 0 ? 'checked' : '' %>
                  />
                  <label class="form-check-label" for="address<%= index %>">
                    <%= address.firstName %> <%= address.lastName %><br />
                    <%= address.address1 %> <%= address.address2 %><br />
                    <%= address.city %>, <%= address.state %> <%= address.zip %><br />
                    <%= address.phone %><br />
                    <%= address.email %>
                  </label>
                </div>
                <div class="address-actions">
                  <a href="/profile/edit-address/<%= address._id %>" class="btn btn-secondary btn-sm">Edit</a>
                </div>
              </div>
            <% }) %>
            <a href="/profile/add-addressPage" class="btn btn-primary mt-3">Add Address</a>
          <% } else { %>
            <p>No addresses found.</p>
            <a href="/profile/add-addressPage" class="btn btn-primary">Add Address</a>
          <% } %>
    
          <div class="payment-method">
            <h3>Select Payment Method</h3>
            <label>
              <input type="radio" name="paymentMethod" value="COD"> Cash on Delivery (COD)
            </label>
            <label>
              <input type="radio" name="paymentMethod" value="wallet" <%= walletBalance >= finalAmount ? '' : 'disabled' %>>
              Pay with Wallet (Balance: ₹<%= walletBalance %>)
            </label>
          </div>
    
          <button type="button" class="btn btn-primary btn-lg btn-block mt-4" id="razorpayButton">Pay with Razorpay</button>
        </div>
    
        <div class="summary-section">
          <h4>Order Summary</h4>
          <% if (cart && cart.products && cart.products.length > 0) { %>
            <ul class="list-group order-summary mb-3">
              <% cart.products.forEach((product) => { %>
                <li class="list-group-item d-flex justify-content-between">
                  <div>
                    <h6 class="my-0"><%= product.productId.name %></h6>
                    <small class="text-muted">Quantity: <%= product.quantity %></small>
                  </div>
                  <span class="text-muted">₹<%= (product.productId.price * product.quantity).toFixed(2) %></span>
                </li>
              <% }) %>
              <li class="list-group-item d-flex justify-content-between">
                <span>Total (INR)</span>
                <strong id="totalPrice">₹<%= cart.products.reduce((acc, product) => acc + product.productId.price * product.quantity, 0).toFixed(2) %></strong>
              </li>
            </ul>
          <% } else { %>
            <p>No products found in cart.</p>
          <% } %>
          <input type="hidden" name="paymentMethod" id="paymentMethod" value="">
          <button type="submit" class="btn btn-primary btn-lg btn-block mt-4">Place Order</button>
        </div>
      </div>
    </form>
    
  </div>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
  <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.bundle.min.js"></script>
  <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
  <script>
  $(document).on('click', '.apply-coupon-button', function(e) {
      e.preventDefault(); // Prevent default button action
      var couponCode = $(this).data('coupon-code');
      applyCoupon(couponCode); // Call the function to apply the coupon
  });

  function applyCoupon(couponCode) {
    console.log('Applying coupon:', couponCode); // Debugging line
    $.post('/apply-coupon', { couponCode: couponCode }, function(data) {
        console.log('Response data:', data); // Debugging line
        // Update hidden inputs and UI with returned values
        $('#discountAmountInput').val(data.discountAmount);
        $('#finalAmountInput').val(data.finalAmount);
        $('#discountAmount').val(data.discountAmount);  // For placeOrderForm
        $('#finalAmount').val(data.finalAmount);        // For placeOrderForm
        $('#totalPrice').text('₹' + data.finalAmount.toFixed(2));
        
        // SweetAlert success message
        Swal.fire({
            icon: 'success',
            title: 'Coupon Applied!',
            text: data.message
        });
    }).fail(function(response) {
        console.error('Failed response:', response); // Debugging line
        console.error('Error response JSON:', response.responseJSON); // Debugging line

        // SweetAlert error message
        Swal.fire({
            icon: 'error',
            title: 'Error!',
            text: response.responseJSON ? response.responseJSON.message : 'An error occurred'
        });
    });
}


$('#placeOrderForm').submit(function(e) {
    e.preventDefault(); // Prevent default form submission

    const paymentMethod = $('input[name="paymentMethod"]:checked').val();

    if (!paymentMethod || typeof paymentMethod !== 'string') {
        // SweetAlert error for missing payment method
        Swal.fire({
            icon: 'error',
            title: 'Payment Method Required',
            text: 'Please select a valid payment method.'
        });
        return;
    }

    $('#paymentMethod').val(paymentMethod);

    const couponCode = $('#couponCode').val();
    const discountAmount = parseFloat($('#discountAmount').val()) || 0;
    const finalAmount = parseFloat($('#finalAmount').val()) || 0;
    const shippingAddressId = $('input[name="shippingAddressId"]:checked').val();

    if (!shippingAddressId) {
        // SweetAlert error for missing shipping address
        Swal.fire({
            icon: 'error',
            title: 'Shipping Address Required',
            text: 'Please select a shipping address.'
        });
        return;
    }

    $.post('/place-order', { couponCode, discountAmount, finalAmount, paymentMethod, shippingAddressId }, function(data) {
        console.log('Response from server:', data); // Log the entire response for debugging

        if (data.success) {
  Swal.fire({
      icon: 'success',
      title: 'Order Placed!',
      text: 'Your order has been placed successfully.'
  }).then(() => {
      window.location.href =  `/orderConfirm/${data.orderId}`; // Redirect to order confirmation page
  });
} else {
  Swal.fire({
      icon: 'error',
      title: 'Order Failed!',
      text: 'There was a problem placing your order.'
  });
}

    }).fail(function(response) {
        console.error('Failed response:', response);
        // SweetAlert error for server-side issues
        Swal.fire({
            icon: 'error',
            title: 'Order Failed',
            text: response.responseJSON ? response.responseJSON.message : 'Failed to place order. Please try again.'
        });
    });
});



    // Razorpay button handler
  $('#razorpayButton').click(function(e) {
    e.preventDefault(); // Prevent the form from submitting

    const shippingAddressId = $('input[name="shippingAddressId"]:checked').val();
    const finalAmount = parseFloat($('#finalAmount').val()) || 0;
    const couponCode = $('#couponCode').val() || null;

    if (!shippingAddressId) {
      alert('Please select a shipping address.');
      return;
    }

    // Fetch the Razorpay order details
    $.post('/create-razorpay-order', { finalAmount, shippingAddressId, couponCode }, function(orderData) {
      const options = {
        key: orderData.key, // Your Razorpay Key ID
        amount: orderData.amount, // Amount in paise (multiply by 100 for rupees)
        currency: 'INR',
        name: 'Your Website Name',
        description: 'Order Payment',
        order_id: orderData.id, // Order ID returned from Razorpay
        handler: function(response) {
          // After payment completion, post payment details to your server
          $.post('/verify-razorpay-payment', {
            razorpayPaymentId: response.razorpay_payment_id,
            razorpayOrderId: response.razorpay_order_id,
            razorpaySignature: response.razorpay_signature,
            shippingAddressId: shippingAddressId,
            finalAmount: finalAmount,
            couponCode: couponCode
          }, function(paymentResult) {
            if (paymentResult.success) {
              alert('Payment successful!');
              window.location.href = '/order-success'; // Redirect to order success page
            } else {
              alert(paymentResult.message);
            }
          });
        },
        prefill: {
          name: '<%= user.firstName %> <%= user.lastName %>',
          email: '<%= user.email %>',
          contact: '<%= user.phone %>',
        },
        theme: {
          color: '#3399cc'
        }
      };

      const razorpay = new Razorpay(options);
      razorpay.open();
    }).fail(function(response) {
      console.error('Failed response:', response);
      alert('Unable to initiate payment. Please try again.');
    });
    });

</script>
</body>
</html>
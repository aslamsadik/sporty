<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Checkout</title>
  <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
  <link rel="stylesheet" href="/user_assets/css/main.css">
  <style>
    /* General page styles */
    body {
      background-color: #f8f9fa;
    }
    .container {
      margin-top: 30px;
    }
    .checkout-row {
      display: flex;
      justify-content: space-between;
      align-items: flex-start;
    }
    .content-section, .summary-section {
      background-color: white;
      padding: 20px;
      border-radius: 10px;
      box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    }
    .content-section {
      width: 60%;
    }
    .summary-section {
      width: 35%;
    }

    /* Address styles */
    .address-card {
      padding: 15px;
      margin-bottom: 15px;
      border: 2px solid #e9ecef;
      border-radius: 10px;
      background-color: #f1f1f1;
    }
    .form-check-label {
      font-weight: 600;
    }
    .address-actions a {
      font-size: 0.85rem;
      color: #007bff;
    }

    /* Payment method styles */
.payment-method {
  margin-top: 20px;
  display: flex;
  flex-direction: column;
  gap: 8px; /* Creates spacing between each payment method */
}

.payment-method h3 {
  margin-bottom: 10px;
  font-size: 16px;
  font-weight: 600;
}

.payment-method label {
  display: flex;
  align-items: center; /* Aligns radio button and label text on the same line */
  padding: 8px 12px;
  border: 1px solid #ced4da;
  border-radius: 30px; /* Slightly round corners */
  font-weight: 500;
  cursor: pointer;
  background-color: #f1f1f1;
  width: 250px; /* Adjust width for a smaller size */
  transition: background-color 0.3s ease;
  font-size: 14px; /* Reduce font size */
}

.payment-method label:hover {
  background-color: #e9ecef;
}

.payment-method input[type="radio"] {
  margin-right: 8px;
  appearance: none; /* Hides the default radio button */
  border: 1px solid #007bff;
  border-radius: 50%;
  width: 16px;
  height: 16px;
  display: inline-block;
  position: relative;
}

.payment-method input[type="radio"]:checked {
  background-color: #007bff;
  border: 1px solid #007bff;
}

.payment-method input[type="radio"]:before {
  content: "";
  display: block;
  width: 10px;
  height: 10px;
  background-color: white;
  border-radius: 50%;
  position: absolute;
  top: 2px;
  left: 2px;
  opacity: 0;
  transition: opacity 0.2s;
}

.payment-method input[type="radio"]:checked:before {
  opacity: 1;
}

.payment-method input[type="radio"]:disabled + label {
  color: #6c757d;
  cursor: not-allowed;
}


    /* Button styles */
    #razorpayButton,
    .btn-block {
      width: auto;
      padding: 10px 30px;
      border-radius: 50px;
      font-weight: 600;
      text-transform: uppercase;
    }
    #razorpayButton {
      background-color: #f37254;
      color: white;
      border: none;
    }
    #razorpayButton:hover {
      background-color: #e65c39;
    }
    #placeOrderForm button[type="submit"] {
      background-color: #007bff;
      color: white;
      border: none;
    }

   /* Container holding both Order Summary and Coupon Section */
  .checkout-container {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 20px;
  }

  /* Order Summary Section */
  .order-summary {
    width: 100%;
    max-width: 600px;
    background-color: #fff;
    border-radius: 10px;
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
    padding: 20px;
    margin-bottom: 30px;
  }

  /* Coupon Section Styles */
  .coupon-container {
    width: 100%;
    max-width: 500px;
    background-color: #fff;
    border-radius: 10px;
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
    padding: 20px;
    margin-top: 0;
    position: absolute;
    left: 940px;
    top: 520px;
  }

  /* Coupon Header */
  .coupon-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    border-bottom: 2px solid #e9ecef;
    padding-bottom: 10px;
    margin-bottom: 20px;
  }

  .coupon-header h5 {
    margin: 0;
    font-weight: 700;
    color: #007bff;
  }

  /* Coupon Items */
  .coupon-item {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 15px;
    margin-bottom: 15px;
    border-radius: 8px;
    background-color: #f8f9fa;
    transition: background-color 0.3s ease;
    border: 1px solid #e2e2e2;
  }

  .coupon-item:hover {
    background-color: #f1f1f1;
  }

  .coupon-info {
    flex-grow: 1;
  }

  .coupon-code {
    font-weight: 600;
    color: #333;
  }

  .coupon-discount {
    font-size: 14px;
    color: #28a745;
  }

  .coupon-expiry {
    font-size: 12px;
    color: #6c757d;
  }

  /* Apply Coupon Button */
  .apply-coupon-button {
    background-color: #007bff;
    color: #fff;
    border: none;
    border-radius: 50px;
    padding: 8px 15px;
    font-weight: 600;
    text-transform: uppercase;
    transition: background-color 0.3s ease;
  }

  .apply-coupon-button:hover {
    background-color: #0056b3;
  }

  /* No Coupons Message */
  .no-coupons-message {
    text-align: center;
    font-size: 14px;
    color: #6c757d;
    margin-top: 10px;
  }
  </style>
</head>
<body>
  <div class="container">
    <h2 class="mb-4 text-center">Checkout</h2>

    <% if (message) { %>
    <div class="alert alert-<%= messageType %>"><%= message %></div>
    <% } %>

    <!-- Form for placing the order -->
    <form id="placeOrderForm" action="/place-order" method="POST">
      <input type="hidden" name="discountAmount" id="discountAmount" value="<%= discountAmount %>">
      <input type="hidden" name="couponCode" id="couponCode" value="<%= couponCode || '' %>">      
      <input type="hidden" name="finalAmount" id="finalAmount" value="<%= finalAmount %>">

      <!-- Razorpay payment method will be dynamically set below -->
    
      <div class="checkout-row">
        <div class="content-section">
          <h4>Shipping Address</h4>
          <% if (user && user.addresses && user.addresses.length > 0) { %>
            <% user.addresses.forEach((address, index) => { %>
              <div class="address-card <%= index === 0 ? 'active' : '' %>">
                <div class="form-check">
                  <input
                    class="form-check-input"
                    type="radio"
                    name="shippingAddressId"
                    id="address<%= index %>"
                    value="<%= address._id %>"
                    <%= index === 0 ? 'checked' : '' %>
                  />
                  <label class="form-check-label" for="address<%= index %>">
                    <%= address.firstName %> <%= address.lastName %><br />
                    <%= address.address1 %> <%= address.address2 %><br />
                    <%= address.city %>, <%= address.state %> <%= address.zip %><br />
                    <%= address.phone %><br />
                    <%= address.email %>
                  </label>
                </div>
                <div class="address-actions">
                  <a href="/profile/edit-address/<%= address._id %>" class="btn btn-secondary btn-sm">Edit</a>
                </div>
              </div>
            <% }) %>
            <a href="/profile/add-addressPage" class="btn btn-primary mt-3">Add Address</a>
          <% } else { %>
            <p>No addresses found.</p>
            <a href="/profile/add-addressPage" class="btn btn-primary">Add Address</a>
          <% } %>
    
          <div class="payment-method">
            <h3>Select Payment Method</h3>
            <label>
              <input type="radio" name="paymentMethod" value="COD"> Cash on Delivery (COD)
            </label>
            <label>
              <input type="radio" name="paymentMethod" value="wallet" <%= walletBalance >= finalAmount ? '' : 'disabled' %>>
                     <span> Pay with Wallet</span>   
            </label>
            <!-- <label for="">
              (Balance: ₹<%= walletBalance %>)
            </label> -->
          </div>
    
          <button type="button" class="btn btn-primary btn-lg btn-block mt-4" id="razorpayButton">Pay with Razorpay</button>
        </div>
    
        <div class="summary-section">
          <div class="checkout-summary">
            <h2>Order Summary</h2>
           <% if(cart && cart.products && cart.products.length>0 ) {  %>

            <ul class="list-group mb-3">
              <% cart.products.forEach((product) => { %>
                  <li class="list-group-item d-flex justify-content-between">
                      <div>
                          <!-- Access product name -->
                          <h6 class="my-0"><%= product.productId.name %></h6>
                          <!-- Access product quantity -->
                          <small class="text-muted">Quantity: <%= product.quantity %></small>
                        <strong><small class="text-muted">₹<%= (product.productId.price * product.quantity).toFixed(2) %></small></strong>  
                      </div>
                      <!-- Access product image (first image in array) with smaller size -->
                      <img src="/user_assets/imgs/shop/<%= product.productId.images[0] %>" 
                           alt="Product Image" 
                           class="product-image"
                           style="width: 35px; height: auto;"/> <!-- Set a smaller width -->
                      <!-- Access product price -->
                     
                  </li>
              <% }) %>
          </ul>
        
            <div class="summary-item">
              <span>Original Amount:</span>
              <span>₹<%= cart.products.reduce((acc, product) => acc + (product.productId.price * product.quantity), 0).toFixed(2) %></span>
          </div>
          
          <div class="summary-item">
              <span>Offer Discount:</span>
              <span>- ₹<%= cart.products.reduce((acc, product) => acc + product.offerDiscount, 0).toFixed(2) %></span>
          </div>
      
          <hr>
         <div class="summary-item">
            <strong>Final Amount:</strong>
            <strong id="totalPrice">₹<%= cart.products.reduce((acc, product) => acc + (product.priceAfterOffer ? product.priceAfterOffer : product.productId.price), 0).toFixed(2) %></strong>
        </div>
      
          <div class="summary-item">
              <span>Wallet Balance:</span>
              <span>₹<%= walletBalance.toFixed(2) %></span>

          </div>
      <%  } %>
       
        </div>
        
        <input type="hidden" name="paymentMethod" id="paymentMethod" value="">
            <button type="submit" class="btn btn-primary btn-lg btn-block mt-4">Place Order</button>
        </div>
        </div>
      </div>
    </form>
    
    <section id="coupon"></section>
      <div class="">
         <!-- Separate form for applying coupon -->
     <form id="applyCouponForm" method="POST" action="/apply-coupon">
      <div class="coupon-container">
        <h5>Apply Coupon</h5>
        <% if (coupons && coupons.length > 0) { %>
            <% coupons.forEach(coupon => { %>
                <div class="coupon-item">
                    <div class="coupon-info">
                        <div class="coupon-code">Code: <%= coupon.code %></div>
                        <div class="coupon-discount">Discount: ₹<%= coupon.discountValue %></div>
                        <div class="coupon-expiry">
                            Expiry: <%= new Date(coupon.expirationDate).toLocaleDateString() %>
                        </div>
                    </div>
                    <button type="button" class="btn btn-outline-primary apply-coupon-button" 
                    data-coupon-code="<%= coupon.code %>">Apply</button>
                </div>
            <% }) %>
        <% } else { %>
            <p>No coupons available.</p>
        <% } %>
      </div>
    </form>
      </div>
    </section>

  </div>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
  <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.bundle.min.js"></script>
  <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
  
  <script>

$(document).on('click', '.apply-coupon-button', function(e) {
    e.preventDefault(); // Prevent default button action
    var couponCode = $(this).data('coupon-code');
    applyCoupon(couponCode); // Call the function to apply the coupon
});

function applyCoupon(couponCode) {
    console.log('Applying coupon:', couponCode); // Debugging line

    $.post('/apply-coupon', { couponCode: couponCode }, function(data) {
        console.log('Response data:', data); // Debugging line
        $('#discountAmountInput').val(data.discountAmount);
        $('#finalAmountInput').val(data.finalAmount);
        $('#discountAmount').val(data.discountAmount);  // For placeOrderForm
        $('#finalAmount').val(data.finalAmount);        // For placeOrderForm

        // Update the total price and discount in the Order Summary
        $('#totalPrice').text('₹' + data.finalAmount.toFixed(2)); // Update total price in the order summary
        $('#offerDiscount').text('- ₹' + data.discountAmount.toFixed(2)); // Update the discount in the summary
        $('#totalAmount').text('₹' + data.finalAmount.toFixed(2)); // Update the final amount in the summary

        // Update the hidden couponCode field in placeOrderForm
        $('input[name="couponCode"]').val(couponCode);

        // SweetAlert success message
        Swal.fire({
            icon: 'success',
            title: 'Coupon Applied!',
            text: data.message
        });
    }).fail(function(response) {
        console.error('Failed response:', response); // Debugging line
        // SweetAlert error message
        Swal.fire({
            icon: 'error',
            title: 'Error!',
            text: response.responseJSON ? response.responseJSON.message : 'An error occurred'
        });
    });
}


// Store the previously selected payment method
let lastSelectedPaymentMethod = null;

// Handle unselecting the payment method
$('input[name="paymentMethod"]').click(function() {
    if (this === lastSelectedPaymentMethod) {
        // If the same option is clicked again, uncheck it
        $(this).prop('checked', false);
        lastSelectedPaymentMethod = null;
    } else {
        // Store the newly selected payment method
        lastSelectedPaymentMethod = this;
    }
});

// Form submission handler
$('#placeOrderForm').submit(function(e) {
    e.preventDefault(); // Prevent default form submission

    const paymentMethod = $('input[name="paymentMethod"]:checked').val();
    
    if (!paymentMethod || typeof paymentMethod !== 'string') {
        Swal.fire({
            icon: 'error',
            title: 'Payment Method Required',
            text: 'Please select a valid payment method.'
        });
        return;
    }

    $('#paymentMethod').val(paymentMethod);

    const couponCode = $('#couponCode').val();  // Coupon code should be updated here
    console.log("couponCode in frontend:", couponCode);  // It should log the applied coupon
    
    const discountAmount = parseFloat($('#discountAmount').val()) || 0;
    const finalAmount = parseFloat($('#finalAmount').val()) || 0;
    const shippingAddressId = $('input[name="shippingAddressId"]:checked').val();

    if (!shippingAddressId) {
        Swal.fire({
            icon: 'error',
            title: 'Shipping Address Required',
            text: 'Please select a shipping address.'
        });
        return;
    }

    // Log all the data before sending to backend
    console.log('Data to send to /place-order:', {
        couponCode,
        discountAmount,
        finalAmount,
        paymentMethod,
        shippingAddressId
    });

    $.post('/place-order', { couponCode, discountAmount, finalAmount, paymentMethod, shippingAddressId }, function(data) {
        console.log('Response from server:', data); // Log the entire response for debugging

        if (data.success) {
            Swal.fire({
                icon: 'success',
                title: 'Order Placed!',
                text: 'Your order has been placed successfully.'
            }).then(() => {
                window.location.href = `/orderConfirm/${data.orderId}`; // Redirect to order confirmation page
            });
        } else {
            Swal.fire({
                icon: 'error',
                title: 'Order Failed!',
                text: 'There was a problem placing your order.'
            });
        }

    }).fail(function(response) {
        console.error('Failed response:', response);
        Swal.fire({
            icon: 'error',
            title: 'Order Failed',
            text: response.responseJSON ? response.responseJSON.message : 'Failed to place order. Please try again.'
        });
    });
});

// Razorpay button handler
$('#razorpayButton').click(function(e) {
    e.preventDefault(); // Prevent the form from submitting

    const shippingAddressId = $('input[name="shippingAddressId"]:checked').val();
    const finalAmount = parseFloat($('#finalAmount').val()) || 0;
    const couponCode = $('#couponCode').val() || null;
    const offersDiscount = parseFloat($('#discountAmount').val()) || 0;
    const couponDeduction = parseFloat($('#discountAmount').val()) || 0;
    const totalDiscountAmount = offersDiscount + couponDeduction; // Total discount

    if (!shippingAddressId) {
        alert('Please select a shipping address.');
        return;
    }

     // Log data being sent to create Razorpay order
     console.log('Data to send to /create-razorpay-order:', {
        finalAmount,
        shippingAddressId,
        couponCode,
        offersDiscount,
        couponDeduction,
        totalDiscountAmount
    });

    // Fetch the Razorpay order details
    $.post('/create-razorpay-order', { finalAmount, shippingAddressId, couponCode,offersDiscount, couponDeduction, totalDiscountAmount}, function(orderData) {
        console.log("orderData", orderData); // Updated logging

        const options = {
            key: orderData.key, // Your Razorpay Key ID
            amount: orderData.amount, // Amount in paise (multiply by 100 for rupees)
            currency: 'INR',
            name: 'Sporty',
            description: 'Order Payment',
            order_id: orderData.id, // Order ID returned from Razorpay
            handler: function(response) {

              // Log data being sent to /verify-razorpay-payment
              console.log('Data to send to /verify-razorpay-payment:', {
                    razorpay_payment_id: response.razorpay_payment_id,
                    razorpay_order_id: response.razorpay_order_id,
                    razorpay_signature: response.razorpay_signature,
                    shippingAddressId,
                    finalAmount,
                    couponCode,
                    offersDiscount,
                    couponDeduction,
                    totalDiscountAmount
                });

                // After payment completion, post payment details to your server
                $.post('/verify-razorpay-payment', {
                    razorpay_payment_id: response.razorpay_payment_id,
                    razorpay_order_id: response.razorpay_order_id,
                    razorpay_signature: response.razorpay_signature,
                    shippingAddressId: shippingAddressId,
                    finalAmount: finalAmount,
                    couponCode: couponCode,
                    offersDiscount: offersDiscount,
                    couponDeduction: couponDeduction,
                    totalDiscountAmount: totalDiscountAmount
                }, function(paymentResult) {
                  console.log("Response from server (verify-razorpay-payment):", paymentResult); // Log response
                    if (paymentResult.success) {
                        Swal.fire({
                            icon: 'success',
                            title: 'Payment successful!',
                            text: 'Your payment was successful.'
                        }).then(() => {
                            window.location.href = `/orderConfirm/${paymentResult.orderId}`; // Redirect to order success page
                        });
                    } else {
                        Swal.fire({
                            icon: 'error',
                            title: 'Payment Failed!',
                            text: paymentResult.message
                        });
                    }
                }).fail(function(response) {
                    console.error('Failed response:', response);
                    Swal.fire({
                        icon: 'error',
                        title: 'Payment Failed',
                        text: response.responseJSON ? response.responseJSON.message : 'Failed to verify payment. Please try again.'
                    });
                });
            },
            prefill: {
                name: '<%= user.firstName %> <%= user.lastName %>',
                email: '<%= user.email %>',
                contact: '<%= user.phone %>',
            },
            theme: {
                color: '#3399cc'
            }
        };

        const razorpay = new Razorpay(options);
        razorpay.open();
    }).fail(function(response) {
        console.error('Failed response:', response);
        alert('Unable to initiate payment. Please try again.');
    });
});

</script>
</body>
</html>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Order Listing</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <link rel="stylesheet" href="/styles/evara.css">
    <style>
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background-color: #f5f5f5;
            margin: 0;
            padding: 0;
        }

        .container {
            width: 85%;
            margin: 0 auto;
            padding: 20px;
            background-color: #fff;
            border-radius: 8px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            margin-top: 30px;
        }

        h1 {
            text-align: center;
            margin-bottom: 40px;
            color: #333;
        }

        .order-card {
            background-color: #fdfdfd;
            padding: 20px;
            margin-bottom: 20px;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

        .product {
            display: flex;
            align-items: center;
            margin-bottom: 15px;
        }

        .product img {
            width: 80px;
            height: 80px;
            object-fit: cover;
            border-radius: 8px;
            margin-right: 20px;
        }

        .product-info {
            flex-grow: 1;
        }

        .product-info p {
            margin: 0;
        }

        .cancel-button, .view-button {
            color: #fff;
            border: none;
            padding: 10px 20px;
            cursor: pointer;
            border-radius: 4px;
            transition: background-color 0.3s;
        }

        .cancel-button {
            background-color: #dc3545;
        }

        .cancel-button:hover {
            background-color: #c82333;
        }

        .view-button {
            background-color: #007bff;
        }

        .view-button:hover {
            background-color: #0056b3;
        }

        .order-summary {
            margin-top: 20px;
            text-align: right;
        }

        .order-summary p {
            margin: 5px 0;
        }

        .pagination {
            margin: 20px 0;
            display: flex;
            justify-content: center;
        }

        .pagination a {
            color: #007bff;
            margin: 0 5px;
            padding: 8px 16px;
            text-decoration: none;
            border: 1px solid #007bff;
            border-radius: 4px;
        }

        .pagination a.active {
            background-color: #007bff;
            color: white;
        }

        .pagination a:hover {
            background-color: #0056b3;
            color: white;
        }

        .pagination a.disabled {
            pointer-events: none;
            color: grey;
            border-color: grey;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>Your Orders</h1>
        <% if (orders.length === 0) { %>
            <p>You have no orders.</p>
        <% } else { %>
            <% orders.forEach(order => { %>
                <div class="order-card">
                    
                    <!-- Inside the product loop -->
                    <% order.products.forEach(product => { %>
                        <div class="product">
                            <img src="/user_assets/imgs/shop/<%= product.images[0] %>" alt="<%= product.name %>">
                            <div class="product-info">
                                <p><strong><%= product.name %></strong></p>
                                <p>Original Price: <strong>₹<%= product.price %></strong></p> <!-- Final price after discount -->
                                <p>Quantity: <strong><%= product.quantity %></strong> </p>
                                <p>Sub Total: <strong>₹<%= product.originalPrice.toFixed(2) %></strong> </p> <!-- Show original price -->
                                <p>Discount Applied: <strong> ₹<%= product.discountApplied.toFixed(2) %></strong></p> <!-- Show discount applied -->
                                <p>Coupon Discount: <strong><%= order.couponDeduction ? order.couponDeduction.toFixed(2) : '0.00' %></strong></p>
                                <p>Total Discount: <strong><%= order.totaldiscountAmount ? order.totaldiscountAmount.toFixed(2) : '0.00' %></strong></p>
                                
                                <!-- Conditionally display cancel button or "Canceled" text -->
                                <% if (product.cancellationStatus !== 'Cancelled' && order.status !== 'Delivered' && order.products.length > 1) { %>
                                    <button type="button" onclick="cancelProduct('<%= order._id %>', '<%= product._id %>')" class="cancel-button" id="cancelBtn_<%= product._id %>">Cancel Product</button>
                                <% } else { %>
                                    <div> <span style="color: rgb(238, 27, 73);" id="cancelStatus_<%= product._id %>">Canceled</span></div>
                                <% } %>
                            </div>
                        </div>
                    <% }) %>                    
                    <div class="order-summary">
                        <p>Status: <strong><%= order.status %></strong></p>
                        <p>Total Price: <strong>₹<%= order.totalPrice.toFixed(2) %></strong></p>
                        <p>Order Date: <strong><%= new Date(order.createdAt).toLocaleDateString() %></strong></p>
                    </div>
                    <a href="/orderDetails/<%= order._id %>" class="view-button">View Order</a>
                    <% if (order.status === 'Pending' || order.status === 'Shipped') { %>
                        <button class="cancel-button" onclick="cancelOrder('<%= order._id %>')">Cancel Order</button>
                    <% } else if (order.status === 'Delivered') { %>
                        <button class="return-button btn btn-warning" onclick="returnProduct('<%= order._id %>')">Return Product</button>
                    <% } %>
                </div>
            <% }) %>
        <% } %>
        
        <!-- Pagination Section -->
        <div class="pagination">
            <% if (currentPage > 1) { %>
                <a href="?page=<%= currentPage - 1 %>">Previous</a>
            <% } else { %>
                <a href="#" class="disabled">Previous</a>
            <% } %>

            <% for (let i = 1; i <= totalPages; i++) { %>
                <a href="?page=<%= i %>" class="<%= currentPage === i ? 'active' : '' %>"><%= i %></a>
            <% } %>

            <% if (currentPage < totalPages) { %>
                <a href="?page=<%= currentPage + 1 %>">Next</a>
            <% } else { %>
                <a href="#" class="disabled">Next</a>
            <% } %>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://code.jquery.com/jquery-3.3.1.min.js"></script>
    <script>
        function cancelOrder(orderId) {
            Swal.fire({
                title: 'Are you sure?',
                text: "Do you really want to cancel this order?",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, cancel it!',
                cancelButtonText: 'No, keep it'
            }).then((result) => {
                if (result.isConfirmed) {
                    fetch(`/order/cancel/${orderId}`, { method: 'POST' })
                        .then(response => response.json())
                        .then(data => {
                            if (data.success) {
                                Swal.fire({
                                    icon: 'success',
                                    title: 'Success',
                                    text: 'Order cancelled successfully!',
                                    confirmButtonText: 'OK'
                                }).then(() => {
                                    window.location.reload();
                                });
                            } else {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Error',
                                    text: 'Failed to cancel the order. Please try again.',
                                });
                            }
                        });
                }
            });
        }

        function returnProduct(orderId) {
            Swal.fire({
                title: 'Are you sure?',
                text: "Do you want to return this product?",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, return it!',
                cancelButtonText: 'No, keep it'
            }).then((result) => {
                if (result.isConfirmed) {
                    fetch(`/order/return/${orderId}`, { method: 'POST' })
                        .then(response => response.json())
                        .then(data => {
                            if (data.success) {
                                Swal.fire({
                                    icon: 'success',
                                    title: 'Success',
                                    text: 'Product return requested successfully!',
                                    confirmButtonText: 'OK'
                                }).then(() => {
                                    window.location.reload();
                                });
                            } else {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Error',
                                    text: 'Failed to return the product. Please try again.',
                                });
                            }
                        });
                }
            });
        }

        // function cancelProduct(orderId, productId) {
        //     console.log(orderId, productId);
        //     Swal.fire({
        //         title: 'Are you sure?',
        //         text: "Do you really want to cancel this product?",
        //         icon: 'warning',
        //         showCancelButton: true,
        //         confirmButtonColor: '#3085d6',
        //         cancelButtonColor: '#d33',
        //         confirmButtonText: 'Yes, cancel it!',
        //         cancelButtonText: 'No, keep it'
        //     }).then((result) => {
        //         if (result.isConfirmed) {
        //             fetch(`/order/${orderId}/cancelProduct/${productId}`, { method: 'POST' })
        //                 .then(response => response.json())
        //                 .then(data => {
        //                     if (data.success) {
        //                         Swal.fire({
        //                             icon: 'success',
        //                             title: 'Success',
        //                             text: 'Product cancelled successfully!',
        //                             confirmButtonText: 'OK'
        //                         }).then(() => {
        //                             window.location.reload();
        //                         });
        //                     } else {
        //                         Swal.fire({
        //                             icon: 'error',
        //                             title: 'Error',
        //                             text: 'Failed to cancel the product. Please try again.',
        //                         });
        //                     }
        //                 });
        //         }
        //     });
        // }

        function cancelProduct(orderId, productId) {
    console.log(orderId, productId);
    Swal.fire({
        title: 'Are you sure?',
        text: "Do you really want to cancel this product?",
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: 'Yes, cancel it!',
        cancelButtonText: 'No, keep it'
    }).then((result) => {
        if (result.isConfirmed) {
            fetch(`/order/${orderId}/cancelProduct/${productId}`, { method: 'POST' })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        Swal.fire({
                            icon: 'success',
                            title: 'Success',
                            text: 'Product cancelled successfully!',
                            confirmButtonText: 'OK'
                        }).then(() => {
                            // Update the button to "Canceled" without reloading the page
                            document.getElementById(`cancelBtn_${productId}`).outerHTML = '<span id="cancelStatus_' + productId + '">Canceled</span>';
                        });
                    } else {
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: 'Failed to cancel the product. Please try again.',
                        });
                    }
                });
        }
    });
}

    </script>
</body>
</html>

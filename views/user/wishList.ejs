<%- include("../layouts/header.ejs") %>

<main class="main">
  <section class="mt-50 mb-50">
    <div class="container">
      <div class="row">
        <div class="col-12">
          <div class="table-responsive">
            <% if (wishlist && wishlist.products.length > 0) { %>
              <table class="table shopping-summery text-center">
                <thead>
                  <tr class="main-heading">
                    <th scope="col" colspan="2">Product</th>
                    <th scope="col">Price</th>
                    <th scope="col">Stock Status</th>
                    <th scope="col">Action</th>
                    <th scope="col">Remove</th>
                  </tr>
                </thead>
                <tbody>
                  <% wishlist.products.forEach(product => { %>
                    <tr data-product-id="<%= product._id %>">
                      <td class="image product-thumbnail">
                        <img src="<%= product.images.length > 0 ? `/user_assets/imgs/shop/${product.images[0]}` : '/user_assets/imgs/shop/default-image.jpg' %>" alt="#">
                      </td>
                      <td class="product-des product-name">
                        <h5 class="product-name"><a href="/product/<%= product._id %>"><%= product.name %></a></h5>
                        <p class="font-xs"><%= product.description %></p>
                      </td>
                      <td class="price" data-title="Price"><span>â‚¹<%= product.price %></span></td>
                      <td class="text-center" data-title="Stock">
                        <% if (product.stock > 0) { %>
                          <span class="color3 font-weight-bold">In Stock</span>
                        <% } else { %>
                          <span class="text-danger font-weight-bold">Out of stock</span>
                        <% } %>
                      </td>
                      <td class="text-right" data-title="Cart">
                        <% if (product.stock > 0) { %>
                            <form class="add-to-cart-form" action="/cart/add" method="POST" data-product-id="<%= product._id %>">
                                <input type="hidden" name="productId" value="<%= product._id %>">
                                <button type="submit" class="btn btn-sm"><i class="fi-rs-shopping-bag mr-5"></i>Add to cart</button>
                            </form>
                        <% } else { %>
                            <button class="btn btn-sm btn-secondary" disabled><i class="fi-rs-headset mr-5"></i>Out of Stock</button>
                        <% } %>
                    </td>
                    
                      <td class="action" data-title="Remove">
                        <form class="remove-from-wishlist-form" data-product-id="<%= product._id %>" action="/wishlist/remove" method="POST">
                          <input type="hidden" name="productId" value="<%= product._id %>">
                          <button type="submit" class="button button-remove-from-wishlist">Remove</button>
                        </form>
                      </td>
                    </tr>
                  <% }); %>
                </tbody>
              </table>
            <% } else { %>
              <p>Your wishlist is empty.</p>
            <% } %>
          </div>
        </div>
      </div>
    </div>
  </section>
</main>

<!-- Include SweetAlert2 -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<script>
  // document.addEventListener("DOMContentLoaded", function () {
  //   const showAlert = (type, title, message) => {
  //     Swal.fire({
  //       icon: type,
  //       title: title,
  //       text: message,
  //       confirmButtonText: 'OK'
  //     });
  //   };

  //   // Add event listener for wishlist removal
  //   document.querySelectorAll(".remove-from-wishlist-form").forEach(form => {
  //     form.addEventListener("submit", function (e) {
  //       e.preventDefault();

  //       const formData = new FormData(this);
  //       const productId = formData.get("productId");

  //       fetch(this.action, {
  //         method: "POST",
  //         body: formData
  //       })
  //       .then(response => response.json())
  //       .then(data => {
  //         if (data.success) {
  //           showAlert('success', 'Removed!', data.message);
  //           const productRow = document.querySelector(`[data-product-id="${productId}"]`);
  //           if (productRow) {
  //             productRow.remove();
  //           }
  //         } else {
  //           showAlert('error', 'Error', data.message);
  //         }
  //       })
  //       .catch(error => {
  //         showAlert('error', 'Error', "An error occurred. Please try again.");
  //       });
  //     });
  //   });

  //   // Add event listener for adding to wishlist
  //   document.querySelectorAll(".add-to-cart-form").forEach(form => {
  //     form.addEventListener("submit", function (e) {
  //       e.preventDefault();

  //       const formData = new FormData(this);
  //       const productId = formData.get("productId");

  //       fetch(this.action, {
  //         method: "POST",
  //         body: formData
  //       })
  //       .then(response => response.json())
  //       .then(data => {
  //         if (data.success) {
  //           showAlert('success', 'Added!', data.message);
  //         } else {
  //           showAlert('error', 'Error', data.message);
  //         }
  //       })
  //       .catch(error => {
  //         showAlert('error', 'Error', "An error occurred. Please try again.");
  //       });
  //     });
  //   });
  // });

  document.addEventListener("DOMContentLoaded", function () {
  const showMessageAlert = (type, title, message) => {
    Swal.fire({
      icon: type,
      title: title,
      text: message,
      confirmButtonText: 'OK'
    });
  };

  // Handle adding to wishlist
  document.querySelectorAll(".add-to-wishlist-form").forEach(form => {
    form.addEventListener("submit", function (e) {
      e.preventDefault();
      const formData = new FormData(this);

      fetch(this.action, {
        method: "POST",
        body: formData
      })
      .then(response => response.json())
      .then(data => {
        if (data.success) {
          showMessageAlert('success', 'Success', data.message);
          setTimeout(() => location.reload(), 1500); // Reload after success
        } else {
          showMessageAlert('error', 'Error', data.message);
        }
      })
      .catch(error => {
        showMessageAlert('error', 'Error', "An error occurred. Please try again.");
      });
    });
  });

  // Handle removing from wishlist
  document.querySelectorAll(".remove-from-wishlist-form").forEach(form => {
    form.addEventListener("submit", function (e) {
      e.preventDefault();
      const formData = new FormData(this);
      const productId = formData.get('productId');

      fetch(this.action, {
        method: "POST",
        body: formData
      })
      .then(response => response.json())
      .then(data => {
        if (data.success) {
          showMessageAlert('success', 'Success', data.message);
          const productRow = document.querySelector(`[data-product-id="${productId}"]`);
          if (productRow) {
            productRow.remove();
          }
        } else {
          showMessageAlert('error', 'Error', data.message);
        }
      })
      .catch(error => {
        showMessageAlert('error', 'Error', "An error occurred. Please try again.");
      });
    });
  });
});

</script>
